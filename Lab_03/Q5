#include <iostream>
using namespace std;


class Node {
public:
    string song;
    Node *next;

    Node(string s) {
        song = s;
        next = nullptr;
    }
};

class Playlist {
    Node *head;

public:
    Playlist() {
        head = nullptr;
    }

 
    void addSong(string name) {
        Node *n = new Node(name);
        if (head == nullptr) {
            head = n;
            n->next = head; 
            return;
        }
        Node *temp = head;
        while (temp->next != head) {
            temp = temp->next;
        }
        temp->next = n;
        n->next = head; 
    }

   
    void deleteSong() {
        if (head == nullptr) {
            cout << "Playlist is empty." << endl;
            return;
        }
        if (head->next == head) { 
            cout << "Deleted: " << head->song << endl;
            delete head;
            head = nullptr;
            return;
        }
        Node *temp = head;
        Node *last = head;
        while (last->next != head) {
            last = last->next;
        }
        head = head->next;
        last->next = head;
        cout << "Deleted: " << temp->song << endl;
        delete temp;
    }

   
    bool searchSong(string name) {
        if (head == nullptr) return false;
        Node *temp = head;
        do {
            if (temp->song == name) return true;
            temp = temp->next;
        } while (temp != head);
        return false;
    }

  
    void display() {
        if (head == nullptr) {
            cout << "Playlist is empty." << endl;
            return;
        }
        Node *temp = head;
        cout << "Playlist: ";
        do {
            cout << temp->song << " -> ";
            temp = temp->next;
        } while (temp != head);
        cout << "(back to start)" << endl;
    }
};

int main() {
    Playlist pl;

  
    pl.addSong("Song A");
    pl.addSong("Song B");
    pl.addSong("Song C");
    pl.addSong("Song D");

    
    pl.display();

    
    cout << "Searching for 'Song C': " << (pl.searchSong("Song C") ? "Found" : "Not Found") << endl;

   
    pl.deleteSong();
    pl.display();

    return 0;
}
