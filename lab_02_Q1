#include <iostream>
using namespace std;

class DynamicArray {
private:
    int* data;       
    int size;        
    int capacity;     

   
    void resize() {
        int newCapacity = capacity * 2;
        int* newData = new int[newCapacity];

      
        for (int i = 0; i < size; ++i) {
            newData[i] = data[i];
        }

        delete[] data;

        data = newData;
        capacity = newCapacity;
    }

public:
    
    DynamicArray(int initialCapacity = 2) {
        capacity = initialCapacity;
        size = 0;
        data = new int[capacity];
    }

   
    ~DynamicArray() {
        delete[] data;
    }

    
    void push_back(int value) {
        if (size == capacity) {
            resize();
        }
        data[size] = value;
        size++;
    }

    
    void print() const {
        cout << "Array elements: ";
        for (int i = 0; i < size; ++i) {
            cout << data[i] << " ";
        }
        cout << endl;
    }
};


int main() {
    DynamicArray arr;

    arr.push_back(5);
    arr.push_back(10);
    arr.push_back(15);
    arr.push_back(20);
    arr.push_back(25);

    arr.print(); 

    return 0;
}

